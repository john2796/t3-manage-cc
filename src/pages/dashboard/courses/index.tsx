import AdminDashboardLayout from "@/components/layouts/admin-dashboard-layout";
import { api } from "@/utils/api";
import { gegtImageUrl } from "@/utils/getImageUrl";
import {
  Button,
  Flex,
  Grid,
  Group,
  Image,
  Card as MantineCard,
  Modal,
  Stack,
  Text,
  TextInput,
  Textarea,
} from "@mantine/core";
import { useForm } from "@mantine/form";
import { useDisclosure } from "@mantine/hooks";
import { type Course } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

const Courses: NextPage = () => {
  const courses = api.course.getCourses.useQuery();
  const createCourseMutation = api.course.createCourse.useMutation();

  const [
    isCreateCourseModalOpen,
    { open: openCreateCourseModal, close: closeCreateCourseModal },
  ] = useDisclosure(false);

  const createCourseForm = useForm({
    initialValues: {
      title: "",
      description: "",
    },
  });

  return (
    <>
      <Head>
        <title>Manage Course</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Modal
        opened={isCreateCourseModalOpen}
        onClose={closeCreateCourseModal}
        title="Create Course"
      >
        <form
          onSubmit={createCourseForm.onSubmit(async (values) => {
            await createCourseMutation.mutateAsync(values);
            closeCreateCourseModal();
            createCourseForm.reset();
            await courses.refetch();
          })}
        >
          <Stack>
            <TextInput
              withAsterisk
              label="Title"
              required
              placeholder="name your course here"
              {...createCourseForm.getInputProps("title")}
            />

            <Textarea
              withAsterisk
              minRows={6}
              required
              label="Description"
              placeholder="describe your course a bit"
              {...createCourseForm.getInputProps("description")}
            />
          </Stack>

          <Group position="right" mt="md">
            <Button type="submit">Create Course</Button>
          </Group>
        </form>
      </Modal>

      <main>
        <AdminDashboardLayout>
          <Flex justify="space-between" align="center" direction="row">
            <h1>Manage Courses</h1>
            <Button onClick={openCreateCourseModal}> Create Course</Button>
          </Flex>

          <Grid>
            {courses.data?.map((course) => (
              <Grid.Col key={course.id} span={4}>
                <CourseCard course={course} />
              </Grid.Col>
            ))}
          </Grid>
        </AdminDashboardLayout>
      </main>
    </>
  );
};

export function CourseCard({ course }: { course: Course }) {
  return (
    <MantineCard shadow="sm" padding="lg" radius="md" withBorder>
      <MantineCard.Section>
        <Image src={gegtImageUrl(course.id)} height={160} alt="Norway" />
      </MantineCard.Section>

      <Group position="apart" mt="md" mb="xs">
        <Text weight={500}>{course.title}</Text>
        <Text size="sm" color="dimmed">
          {course.description}
        </Text>
        <Button
          component={Link}
          href={`/dashboard/courses/${course.id}`}
          variant="light"
          color="blue"
          fullWidth
          mt="md"
          radius="md"
        >
          Manage
        </Button>
      </Group>
    </MantineCard>
  );
}

export default Courses;
